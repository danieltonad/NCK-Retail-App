openapi: 3.0.3
info:
  title: 'NCK Retail App'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/admin/register:
    post:
      summary: 'Register Admin'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => 'success',\n      'authorisation' => [\n         'token' => 'jwt-auth-token',\n        'type' => 'bearer'\n   ]\n}"
      tags:
        - 'Admin Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: 'Admin Fullname.'
                  example: 'John Admin'
                email:
                  type: string
                  description: 'Admin Email.'
                  example: admin@mail.com
                password:
                  type: string
                  description: 'User Password.'
                  example: admin-secret
              required:
                - fullname
                - email
                - password
      security: []
  /api/admin/login:
    post:
      summary: 'Login Admin'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => 'success',\n      'authorisation' => [\n         'token' => 'jwt-auth-token',\n        'type' => 'bearer'\n   ]\n}"
      tags:
        - 'Admin Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Admin Email.'
                  example: admin@mail.com
                password:
                  type: string
                  description: 'Admin Password.'
                  example: admin-secret
              required:
                - email
                - password
      security: []
  /api/user/cart/add:
    post:
      summary: 'Add Inventory To Cart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success\",\n 'message' => \"Inventory added to cart successfully, Cart ID: 1234\"\n}"
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inventory_id:
                  type: integer
                  description: 'Inventory ID .'
                  example: 1234
                quantity:
                  type: integer
                  description: Quantity.
                  example: 1
              required:
                - inventory_id
                - quantity
  /api/user/cart/list:
    get:
      summary: 'List Cart Inventories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"success || error message\"\n 'data' => []\n}"
      tags:
        - Cart
  '/api/user/cart/delete/{cart_id}':
    delete:
      summary: 'Delete Inventory From Cart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"success || error message\"\n}"
      tags:
        - Cart
    parameters:
      -
        in: path
        name: cart_id
        description: 'Cart ID.'
        example: 14
        required: true
        schema:
          type: integer
  '/api/user/cart/update/{cart_id}':
    patch:
      summary: 'Update Existing Inventory In Cart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"success || error message\"\n}"
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: 'Quantity .'
                  example: 1234
              required:
                - quantity
    parameters:
      -
        in: path
        name: cart_id
        description: 'Cart ID.'
        example: 18
        required: true
        schema:
          type: integer
  /api/user/inventories:
    get:
      summary: 'List Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"sucess || error message\",\n 'data' => []\n}"
      tags:
        - Inventories
  /api/admin/inventory/add:
    post:
      summary: 'Create Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"Inventory Created Successfully, Inventory id: #334\"\n}"
      tags:
        - Inventories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Inventory Name .'
                  example: 'Samsung S21 Ultra'
                price:
                  type: integer
                  description: 'Inventory Price.'
                  example: 1450
                quantity:
                  type: integer
                  description: 'Inventory Supplied Quantity.'
                  example: 120
              required:
                - name
                - price
                - quantity
  '/api/admin/inventory/view/{id}':
    get:
      summary: 'View Specific Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"sucess || error message\"\n}"
      tags:
        - Inventories
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the view.'
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: inventory_id
        description: 'Inventory ID.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/admin/inventory/delete/{id}':
    delete:
      summary: 'Delete Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"sucess || error message\"\n}"
      tags:
        - Inventories
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete.'
        example: molestias
        required: true
        schema:
          type: string
      -
        in: path
        name: inventory_id
        description: 'Inventory ID'
        example: 9
        required: true
        schema:
          type: integer
  '/api/admin/inventory/update/{id}':
    patch:
      summary: 'Update Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"sucess || error message\"\n}"
      tags:
        - Inventories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Inventory Name .'
                  example: 'Samsung S21 Ultra'
                price:
                  type: integer
                  description: 'Inventory Price.'
                  example: 1450
                quantity:
                  type: integer
                  description: 'Inventory Supplied Quantity.'
                  example: 120
              required:
                - name
                - price
                - quantity
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: voluptatibus
        required: true
        schema:
          type: string
  /api/admin/inventory/list:
    get:
      summary: 'List Inventory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => \"success || error\",\n 'message' => \"sucess || error message\",\n 'data' => []\n}"
      tags:
        - Inventories
  /api/user/register:
    post:
      summary: 'Register User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => 'success',\n      'authorisation' => [\n         'token' => 'jwt-auth-token',\n        'type' => 'bearer'\n   ]\n}"
      tags:
        - 'User Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'User Full Name.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'User Email.'
                  example: admin@mail.com
                password:
                  type: string
                  description: 'User Password.'
                  example: secret
              required:
                - name
                - email
                - password
      security: []
  /api/user/login:
    post:
      summary: 'Login User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n 'status' => 'success',\n      'authorisation' => [\n         'token' => 'jwt-auth-token',\n        'type' => 'bearer'\n   ]\n}"
      tags:
        - 'User Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'User Email.'
                  example: user@mail.com
                password:
                  type: string
                  description: 'User Password.'
                  example: secret
              required:
                - email
                - password
      security: []
tags:
  -
    name: 'Admin Authentication'
    description: ''
  -
    name: Cart
    description: ''
  -
    name: Inventories
    description: ''
  -
    name: 'User Authentication'
    description: ''
